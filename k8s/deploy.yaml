apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk030-my-app
  namespace: skala-practice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sk030-my-app
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8081'
        prometheus.io/path: '/actuator/prometheus'
      labels:
        app: sk030-my-app
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: control-plane
                    operator: In
                    values:
                      - "amdp"
      containers:
        - name: my-app
          image: amdp-registry.skala-ai.com/skala25a/sk030-my-app@sha256:23192de28ddcf07f3736277b79ae008925ea69db55bb542fc3df3e9300a32455
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
            - containerPort: 8081
          envFrom:
            - configMapRef:
                name: hstagram-config
          env:
            - name: LOGGING_LEVEL__ROOT
              value: DEBUG
            - name: USER_NAME
              value: sk030
            - name: NAMESPACE
              value: skala-practice
      tolerations:
        - key: control-plane
          operator: Equal
          value: "amdp"
          effect: NoSchedule
